/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Ruhon Borah
 */
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.*;
import java.awt.print.*;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
public class candidate_view extends javax.swing.JFrame {

    /**
     * Creates new form candidate_view
     */
    public candidate_view() {
        setUndecorated(true);
        setAlwaysOnTop(true);
        setResizable(true);
        
        
        Toolkit tk= Toolkit.getDefaultToolkit();
        
        int x=(int) tk.getScreenSize().getWidth();
        int y=(int) tk.getScreenSize().getHeight();
        
        
        
        this.setSize(x,y); 
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        printt = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        ko = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jButton2.setText("SHOW CANDIDATE NAME");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jButton3.setText("CLEAR");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        printt.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        printt.setText("PRINT");
        printt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printtActionPerformed(evt);
            }
        });

        jButton1.setText("<<");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "POST", "CANDIDATE NAME"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table);

        ko.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(102, 102, 102)
                .addComponent(ko, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(91, 91, 91)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(75, 75, 75))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(printt, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(138, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(printt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ko, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(57, 57, 57))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int i;
        i=ko.getSelectedIndex();
        if(i==1){
            String sql="select * from candidate where post='president'";
            DefaultTableModel dtm=(DefaultTableModel)table.getModel();

            try
            {
                Connection con=(Connection)
                DriverManager.getConnection("jdbc:mysql://localhost/jistsue","root","rohan@#8011");
                Statement stat=con.createStatement();

                ResultSet rs=stat.executeQuery(sql);

                while(rs.next()){

                    dtm.addRow(new Object[]{rs.getString("post"),rs.getString("name")});
                }
            }
            catch(SQLException ex){
                System.out.println("Error in prog...."+ex);
            }
            table.setModel(dtm);
        }
        if(i==2){
            String sql="select * from candidate where post='vice president'";
            DefaultTableModel dtm=(DefaultTableModel)table.getModel();

            try
            {
                Connection con=(Connection)
                DriverManager.getConnection("jdbc:mysql://localhost/jistsue","root","rohan@#8011");
                Statement stat=con.createStatement();

                ResultSet rs=stat.executeQuery(sql);

                while(rs.next()){

                     dtm.addRow(new Object[]{rs.getString("post"),rs.getString("name")});
                }
            }
            catch(SQLException ex){
                System.out.println("Error in prog...."+ex);
            }
            table.setModel(dtm);
        }
        if(i==3){
            String sql="select * from candidate where post='general secretary'";
            DefaultTableModel dtm=(DefaultTableModel)table.getModel();

            try
            {
                Connection con=(Connection)
                DriverManager.getConnection("jdbc:mysql://localhost/jistsue","root","rohan@#8011");
                Statement stat=con.createStatement();

                ResultSet rs=stat.executeQuery(sql);

                while(rs.next()){

                     dtm.addRow(new Object[]{rs.getString("post"),rs.getString("name")});
                }
            }
            catch(SQLException ex){
                System.out.println("Error in prog...."+ex);
            }
            table.setModel(dtm);
        }
        if(i==4){
            String sql="select * from candidate where post= 'asst. general secretary'";
            DefaultTableModel dtm=(DefaultTableModel)table.getModel();

            try
            {
                Connection con=(Connection)
                DriverManager.getConnection("jdbc:mysql://localhost/jistsue","root","rohan@#8011");
                Statement stat=con.createStatement();

                ResultSet rs=stat.executeQuery(sql);

                while(rs.next()){

                     dtm.addRow(new Object[]{rs.getString("post"),rs.getString("name")});
                }
            }
            catch(SQLException ex){
                System.out.println("Error in prog...."+ex);
            }
            table.setModel(dtm);
        }
        if(i==5){
            String sql="select * from candidate where post= 'literary & magazine secretary'";
            DefaultTableModel dtm=(DefaultTableModel)table.getModel();

            try
            {
                Connection con=(Connection)
                DriverManager.getConnection("jdbc:mysql://localhost/jistsue","root","rohan@#8011");
                Statement stat=con.createStatement();

                ResultSet rs=stat.executeQuery(sql);

                while(rs.next()){

                     dtm.addRow(new Object[]{rs.getString("post"),rs.getString("name")});
                }
            }
            catch(SQLException ex){
                System.out.println("Error in prog...."+ex);
            }
            table.setModel(dtm);
        }
        if(i==6){
            String sql="select * from candidate where post= 'literary & magazine secretary'";
            DefaultTableModel dtm=(DefaultTableModel)table.getModel();

            try
            {
                Connection con=(Connection)
                DriverManager.getConnection("jdbc:mysql://localhost/jistsue","root","rohan@#8011");
                Statement stat=con.createStatement();

                ResultSet rs=stat.executeQuery(sql);

                while(rs.next()){

                    dtm.addRow(new Object[]{rs.getString("post"),rs.getString("name")});
                }
            }
            catch(SQLException ex){
                System.out.println("Error in prog...."+ex);
            }
            table.setModel(dtm);
        }
        if(i==7){
            String sql="select * from candidate where post= 'debating & symposium secretary'";
            DefaultTableModel dtm=(DefaultTableModel)table.getModel();

            try
            {
                Connection con=(Connection)
                DriverManager.getConnection("jdbc:mysql://localhost/jistsue","root","rohan@#8011");
                Statement stat=con.createStatement();

                ResultSet rs=stat.executeQuery(sql);

                while(rs.next()){

                     dtm.addRow(new Object[]{rs.getString("post"),rs.getString("name")});
                }
            }
            catch(SQLException ex){
                System.out.println("Error in prog...."+ex);
            }
            table.setModel(dtm);}
        if(i==8){
            String sql="select * from candidate where post=' major games secretary'";
            DefaultTableModel dtm=(DefaultTableModel)table.getModel();

            try
            {
                Connection con=(Connection)
                DriverManager.getConnection("jdbc:mysql://localhost/jistsue","root","rohan@#8011");
                Statement stat=con.createStatement();

                ResultSet rs=stat.executeQuery(sql);

                while(rs.next()){

                     dtm.addRow(new Object[]{rs.getString("post"),rs.getString("name")});
                }
            }
            catch(SQLException ex){
                System.out.println("Error in prog...."+ex);
            }
            table.setModel(dtm);}
        if(i==9){
            String sql="select * from candidate where post= 'minor games secretary'";
            DefaultTableModel dtm=(DefaultTableModel)table.getModel();

            try
            {
                Connection con=(Connection)
                DriverManager.getConnection("jdbc:mysql://localhost/jistsue","root","rohan@#8011");
                Statement stat=con.createStatement();

                ResultSet rs=stat.executeQuery(sql);

                while(rs.next()){

                     dtm.addRow(new Object[]{rs.getString("post"),rs.getString("name")});
                }
            }
            catch(SQLException ex){
                System.out.println("Error in prog...."+ex);
            }
            table.setModel(dtm);}
        if(i==10){
            String sql="select * from candidate where post= 'social service secretary'";
            DefaultTableModel dtm=(DefaultTableModel)table.getModel();

            try
            {
                Connection con=(Connection)
                DriverManager.getConnection("jdbc:mysql://localhost/jistsue","root","rohan@#8011");
                Statement stat=con.createStatement();

                ResultSet rs=stat.executeQuery(sql);

                while(rs.next()){

                    dtm.addRow(new Object[]{rs.getString("post"),rs.getString("name")});
                }
            }
            catch(SQLException ex){
                System.out.println("Error in prog...."+ex);
            }
            table.setModel(dtm);}
        if(i==11){
            String sql="select * from candidate where post= 'boys common secretary'";
            DefaultTableModel dtm=(DefaultTableModel)table.getModel();

            try
            {
                Connection con=(Connection)
                DriverManager.getConnection("jdbc:mysql://localhost/jistsue","root","rohan@#8011");
                Statement stat=con.createStatement();

                ResultSet rs=stat.executeQuery(sql);

                while(rs.next()){

                     dtm.addRow(new Object[]{rs.getString("post"),rs.getString("name")});
                }
            }
            catch(SQLException ex){
                System.out.println("Error in prog...."+ex);
            }
            table.setModel(dtm);}
        if(i==12){
            String sql="select * from candidate where post= 'girls common secretary'";
            DefaultTableModel dtm=(DefaultTableModel)table.getModel();

            try
            {
                Connection con=(Connection)
                DriverManager.getConnection("jdbc:mysql://localhost/jistsue","root","rohan@#8011");
                Statement stat=con.createStatement();

                ResultSet rs=stat.executeQuery(sql);

                while(rs.next()){

                    dtm.addRow(new Object[]{rs.getString("post"),rs.getString("name")});
                }
            }
            catch(SQLException ex){
                System.out.println("Error in prog...."+ex);
            }
            table.setModel(dtm);}
        if(i==13){
            String sql="select * from candidate where post= 'training & placement secretary'";
            DefaultTableModel dtm=(DefaultTableModel)table.getModel();

            try
            {
                Connection con=(Connection)
                DriverManager.getConnection("jdbc:mysql://localhost/jistsue","root","rohan@#8011");
                Statement stat=con.createStatement();

                ResultSet rs=stat.executeQuery(sql);

                while(rs.next()){

                     dtm.addRow(new Object[]{rs.getString("post"),rs.getString("name")});
                }
            }
            catch(SQLException ex){
                System.out.println("Error in prog...."+ex);
            }
            table.setModel(dtm);}
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        table.setModel(new DefaultTableModel(null,new String[]{"SL","VOTE"}));
    }//GEN-LAST:event_jButton3ActionPerformed

    private void printtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printtActionPerformed
        // TODO add your handling code here:
        MessageFormat header=new MessageFormat("Report Print");
        MessageFormat footer=new MessageFormat("page{0,number,integer}");

        try{
            table.print(JTable.PrintMode.FIT_WIDTH, header, footer);
        }catch(java.awt.print.PrinterException e){
            System.err.format("cnnot print %s%n", e.getMessage());
        }
    }//GEN-LAST:event_printtActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        new administration_portal().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
         String PRE1="select * from add_post;";
        
        
        
        try
        {
            Connection con= DriverManager.getConnection("jdbc:mysql://localhost/jistsue","root","rohan@#8011");
            Statement stat=con.createStatement();
            
            ResultSet r=stat.executeQuery(PRE1);
            
            while(r.next()){
                
                ko.addItem(r.getString("POSTN"));
            }
        }
        catch(SQLException ex){
            System.out.println("Error in prog...."+ex);
        }   
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(candidate_view.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(candidate_view.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(candidate_view.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(candidate_view.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new candidate_view().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> ko;
    private javax.swing.JButton printt;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
